type Query {
    getAllAgreements : [Agreement]
    getAgreement(id:Int): Agreement
    getAllAgreementOffers:[AgreementOffer]

    characters: [SuperCharacter]!
    characterById(id:String): SuperCharacter
    groups: [SuperGroup]!
    groupByName(name:String): SuperGroup
}

type Mutation {
    addCharacter(name:String age:Int groupName:String): SuperCharacter
    addGroup(name:String orientation: Orientation): SuperGroup
}


type Agreement{
    agreementId: Int!
    name: String!
}

type ProductOffer {
    productOfferId: Int!
    name:String!
    someValue: Int
}

type AgreementOffer{
    agreementOfferId: Int!
    agreement: Agreement
    productOffers: [ProductOffer]
}

type SuperCharacter {
    id: String!
    name: String!
    age: Int
    group: SuperGroup
}

type SuperGroup {
    name: String!
    orientation: Orientation
    members: [SuperCharacter]

}

enum Orientation{
    HERO
    VILLAIN
}


